package com.training.bean;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;



import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;


@Entity
@Table(name = "Drivers")
public class Driver extends User{

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer driverId;
	@Column
	private String licenceNo;
	@Column
	private float rating;
	
	
	
	@OneToMany(cascade = CascadeType.PERSIST,mappedBy = "driver")
	List<TripBooking> trips = new ArrayList<>();
	
	@OneToOne
	private Cab cab;

	public Driver(String userName, String password, String address, String mobileNumber, String email, String userRole,
			Integer driverId, String licenceNo, float rating, List<TripBooking> trips, Cab cab) {
		super(userName, password, address, mobileNumber, email, userRole);
		this.driverId = driverId;
		this.licenceNo = licenceNo;
		this.rating = rating;
		this.trips = trips;
		this.cab = cab;
	}
	

	public Driver(String userName, String password, String address, String mobileNumber, String email, String userRole,
			String licenceNo, float rating, List<TripBooking> trips, Cab cab) {
		super(userName, password, address, mobileNumber, email, userRole);
		this.licenceNo = licenceNo;
		this.rating = rating;
		this.trips = trips;
		this.cab = cab;
	}


	public Driver(String userName, String password, String address, String mobileNumber, String email, String userRole,
			Integer driverId) {
		super(userName, password, address, mobileNumber, email, userRole);
		this.driverId = driverId;
	}


	public Driver(String userName, String password, String address, String mobileNumber, String email,
			String userRole) {
		super(userName, password, address, mobileNumber, email, userRole);
	}

	public Integer getDriverId() {
		return driverId;
	}

	public void setDriverId(Integer driverId) {
		this.driverId = driverId;
	}

	public String getLicenceNo() {
		return licenceNo;
	}

	public void setLicenceNo(String licenceNo) {
		this.licenceNo = licenceNo;
	}

	public float getRating() {
		return rating;
	}

	public void setRating(float rating) {
		this.rating = rating;
	}

	public List<TripBooking> getTrips() {
		return trips;
	}

	public void setTrips(List<TripBooking> trips) {
		this.trips = trips;
	}

	public Cab getCab() {
		return cab;
	}

	public void setCab(Cab cab) {
		this.cab = cab;
	}

	@Override
	public String toString() {
		return "Driver [driverId=" + driverId + ", licenceNo=" + licenceNo + ", rating=" + rating + ", trips=" + trips
				+ ", cab=" + cab + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + Objects.hash(driverId);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		Driver other = (Driver) obj;
		return Objects.equals(driverId, other.driverId);
	}
	
	

	
	
}