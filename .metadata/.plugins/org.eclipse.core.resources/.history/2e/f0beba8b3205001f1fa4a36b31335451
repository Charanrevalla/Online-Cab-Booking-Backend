package com.training.bean;

import java.util.Objects;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.SequenceGenerator;

@Entity

public class TripBooking {
	
	@Id
	@GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "trip_seq"
            )
    @SequenceGenerator(
            name = "trip_seq",
            sequenceName = "trip_seq",
            allocationSize = 1
            )
	private Integer tripBookingId;
	@Column
	private String pickupLocation;
	@Column
	private String fromDateTime;
	@Column
	private String dropLocation;
	@Column
	private String toDateTime;
	@Column
	private float distanceInKm;
	@Column
	private boolean currStatus;
	@Column
	private float bill;
	
	@ManyToOne()
	private Driver driver;
	
	@ManyToOne()
	private Customer customer;
	
	@ManyToOne()
	private Cab cab;

	public TripBooking(Integer tripBookingId, String pickupLocation, String fromDateTime, String dropLocation,
			String toDateTime, float distanceInKm, boolean currStatus, float bill, Driver driver, Customer customer,
			Cab cab) {
		super();
		this.tripBookingId = tripBookingId;
		this.pickupLocation = pickupLocation;
		this.fromDateTime = fromDateTime;
		this.dropLocation = dropLocation;
		this.toDateTime = toDateTime;
		this.distanceInKm = distanceInKm;
		this.currStatus = currStatus;
		this.bill = bill;
		this.driver = driver;
		this.customer = customer;
		this.cab = cab;
	}

	public TripBooking(String pickupLocation, String fromDateTime, String dropLocation, String toDateTime,
			float distanceInKm, boolean currStatus, float bill, Driver driver, Customer customer, Cab cab) {
		super();
		this.pickupLocation = pickupLocation;
		this.fromDateTime = fromDateTime;
		this.dropLocation = dropLocation;
		this.toDateTime = toDateTime;
		this.distanceInKm = distanceInKm;
		this.currStatus = currStatus;
		this.bill = bill;
		this.driver = driver;
		this.customer = customer;
		this.cab = cab;
	}

	public TripBooking(int tripBookingId) {
		super();
		this.tripBookingId = tripBookingId;
	}

	public TripBooking() {
		super();
	}

	public Integer getTripBookingId() {
		return tripBookingId;
	}

	public void setTripBookingId(int tripBookingId) {
		this.tripBookingId = tripBookingId;
	}

	public String getPickupLocation() {
		return pickupLocation;
	}

	public void setPickupLocation(String pickupLocation) {
		this.pickupLocation = pickupLocation;
	}

	public String getFromDateTime() {
		return fromDateTime;
	}

	public void setFromDateTime(String fromDateTime) {
		this.fromDateTime = fromDateTime;
	}

	public String getDropLocation() {
		return dropLocation;
	}

	public void setDropLocation(String dropLocation) {
		this.dropLocation = dropLocation;
	}

	public String getToDateTime() {
		return toDateTime;
	}

	public void setToDateTime(String toDateTime) {
		this.toDateTime = toDateTime;
	}

	public float getDistanceInKm() {
		return distanceInKm;
	}

	public void setDistanceInKm(float distanceInKm) {
		this.distanceInKm = distanceInKm;
	}

	public boolean isCurrStatus() {
		return currStatus;
	}

	public void setCurrStatus(boolean currStatus) {
		this.currStatus = currStatus;
	}

	public float getBill() {
		return bill;
	}

	public void setBill(float bill) {
		this.bill = bill;
	}

	public Driver getDriver() {
		return driver;
	}

	public void setDriver(Driver driver) {
		this.driver = driver;
	}

	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	public Cab getCab() {
		return cab;
	}

	public void setCab(Cab cab) {
		this.cab = cab;
	}

	@Override
	public String toString() {
		return "TripBooking [tripBookingId=" + tripBookingId + ", pickupLocation=" + pickupLocation + ", fromDateTime="
				+ fromDateTime + ", dropLocation=" + dropLocation + ", toDateTime=" + toDateTime + ", distanceInKm="
				+ distanceInKm + ", currStatus=" + currStatus + ", bill=" + bill + ", driver=" + driver + ", customer="
				+ customer + ", cab=" + cab + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(tripBookingId);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TripBooking other = (TripBooking) obj;
		return tripBookingId == other.tripBookingId;
	}
	
	

    
	
	
}
